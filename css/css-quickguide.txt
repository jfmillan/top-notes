*************************************
Mis apuntes de CSS - the odin project
*************************************
div.bold-text { <-------- selector
	font-weight: 700; <-- propiedad: valor;
}

------------------
APLICAR CSS A HTML
------------------
CSS externo: lo tienes en otro fichero y apuntas a él desde el html en el head con link:
p.ej: fichero CSS styles.css
<head>
	<link rel="stylesheet" href="styles.css" />
</head>

CSS interno: lo tienes dentro del propio html, dentro de head, con style
<head>
	<style>
		div {
			color: white;
		}
	</style>
</head>

CSS en línea: no va por tipo, ni por id, ni por clase, etc; afecta simplemente a esa línea.
	nota: superpone cualquier otro método, útil para diferenciaciones.
Obviamente, abusar de esto es mala práctica.
<body>
	<div style="color: white; background-color: black;">...</div>
</body>
------------------

Selectores: 
*, universal

De tipo, p.ej div, para todo el tipo
	div {
		color: white;
	}

.class, de clase: puedes ponerle varias clases al mismo objeto

#id, por identificador: único por objeto

Agrupar, pones tu selector con sus propiedades, otros selectores con las suyas, y luego puedes poner cuantos selectores juntos como quieras y añadirles más propiedades comunes.
.selector1,
.selector2 {
	/* ... */
}

Encadenantes, tienes varias clases y los separas en el selector con un . o con un # si es clase encadenada con id:
class="subsection header"
class="subsection" id="preview"
.subsection.header {
	color: red;
}
.subsection#preview {
	color: blue;
}

Descendiente: separas las clases por un espacio, y solo aplica si para elementos que tienen ese arbol de descencendia (independiente del número de niveles en medio)
<div class="ancestro">			<!--A-->
	<div class="contenido"> 	<!--B-->
		<div class="contenido">	<!--C-->
		</div>
	</div>
</div>
<div class="contenido">			<!--D-->

.ancestro .contenido {
	/* aplica a B y C, pero no a D pues no tiene el ancestro */
}

COLORES
propiedad color https://www.w3schools.com/cssref/css_colors_legal.php
	Hexadecimal: #1100ff
	Hexadecimal con transparencia, añades un valor más: #1100ff80
	
	RGB, función rgb(100, 0, 127) o rgba (100, 0, 127, 0.3) para añadir transparencia.
	HSL, función hsl(15, 82%, 56%) o hsla (15, 82%, 56%, 0.3) para añadir transparencia.

	currentcolor, puntero al propio color; p.ej color: blue y luego border: currentcolor para señalar el mismo

	Colores predefinidos: blue, red, coral, brown, black, white, yellow, orange, cyan, pink... hasta 140 colores

FUENTES
Tipo:
font-family: "Times New Roman", serif; <-- tipo de fuente, con comillas si tiene espacios + especificación o apellido
	Si el navegador no detecta la fuente irá a la siguiente configurada, por lo que se pueden configurar varias

Tamaños en puntos: dejas un espacio después de los dos puntos, pero no dejas ninguno entre el número y el "px":
	font-size: 22px
	font-weight: 700 (más weight más negrita, entre 1 y 1000; 700 equivale a negrita habitual)

Alinear:
text-align: center

ALTO Y ANCHO EN IMAGEN
Se pueden configurar ambos o dejar uno en auto.
img {
	height: auto;
	width: 500px;
}

Aunque pongas tamaño a la imagen en el css, se recomienda dejar un tamaño orientativo en al imagen original, para que mientras carga la página vaya reservando ese espacio y no desplace después todos los objetos.





